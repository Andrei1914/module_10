import random
from queue import Queue
import threading
import time

class Table:
    def __init__(self, number):
        self.number = int(number)
        self.quest = None


class Guest(threading.Thread):
    def __init__(self, name):
        threading.Thread.__init__(self)
        self.name = name

    def run(self):
        timer = random.randint(1, 2)
        time.sleep(timer)


class Cafe:
    def __init__(self, *tables):
        self.tables = tables
        self.queue = Queue()

    def guest_arrival(self, *guest):
        for i in guest:
            for table in self.tables:
                if table.quest is None:
                    table.quest = i
                    table.quest.start()
                    table.quest.join()
                    print(f'{table.quest.name} сел(-а) за стол номер {table.number}')
                    break
            else:
                self.queue.put(i)
                print(f"{i.name} в очереди")

    def discuss_guests(self):
        for table in self.tables:
            if not (table.quest is None) and not (table.quest.is_alive()):
                print(f'{table.quest.name} покушал(-а) и ушёл(ушла)\nСтол номер {table.number} свободен')
                table.guest = None
            if True:
                table.quest = self.queue.get()
                table.quest.start()
                table.quest.join()
                print(f'{table.quest.name} вышел(-ла) из очереди и сел(-а) за стол номер {table.number}')

def main():
    # Создание столов
    tables = [Table(number) for number in range(1, 6)]
    # Имена гостей
    guests_names = [
    'Maria', 'Oleg', 'Vakhtang', 'Sergey', 'Darya', 'Arman',
    'Vitoria', 'Nikita', 'Galina', 'Pavel', 'Ilya', 'Alexandra'
    ]
    # Создание гостей
    guests = [Guest(name) for name in guests_names]
    # Заполнение кафе столами
    cafe = Cafe(*tables)
    # Приём гостей
    cafe.guest_arrival(*guests)
    # Обслуживание гостей
    cafe.discuss_guests()


if __name__ == '__main__':
    main()
